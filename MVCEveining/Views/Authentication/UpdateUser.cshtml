@model MVCEveining.ViewModels.LoginForm

@{
    ViewBag.Title = "UpdateUser";
    var i = 0;

}

<h2>UpdateUser</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>LoginForm</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="panel panel-success panel-hidden-controls">
            <div class="panel-heading">
                <h3 class="panel-title">Manage user permissions</h3>

            </div>
            <div class="panel-body">
                @foreach (var permission in (Dictionary<string, MVCEveining.ViewModels.LoginForm.Permissions>)ViewBag.Permissions)
                {
                    <div class="col-sm-3 form-group">
                        <label class="control-label checkbox-inline" for="@string.Format("CurrentPermissions[{0}]", i)">
                            <input id="@string.Format("CurrentPermissions[{0}]", i)" name="@string.Format("CurrentPermissions[{0}]", i++)" value="@permission.Value" type="checkbox" @((Model.CurrentPermissions & permission.Value) == permission.Value ? "checked='checked'" : "") />
                            @permission.Key
                        </label>
                    </div>
                }
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
